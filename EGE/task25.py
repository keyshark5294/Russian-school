'''
Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:

    символ «?» означает ровно одну произвольную цифру;
    символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и 
    пустую последовательность.

Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

Среди натуральных чисел, не превышающих 2*10**8, найдите пять наибольших чисел, 
подходящих под все перечисленные условия:

    соответствуют маске ?2*4*0;
    не соответствуют маске 1*7*;
    делятся на число 42 без остатка.

В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, 
а во втором столбце — соответствующие им результаты деления этих чисел на 42.
'''

# from fnmatch import fnmatch 

# i = 0
# for z in range(42, 2*10**81+1, 42):
#     z1 = str(z)
    

#     if fnmatch(z1, '?2*4*0') and not(fnmatch(z1, '1*7*')):
#         i += 1
#         print(z, z//42)

#     if i == 5:
#         break

'''
Назовём число интересным, если среди его делителей (кроме единицы и самого числа) есть ровно три квадрата 
натуральных чисел.

Напишите программу, которая среди натуральных чисел, превышающих 10**7, ищет первые пять интересных чисел.

Для каждого найденного числа в отдельной строке таблицы запишите само число, а также наибольший из делителей, 
являющийся квадратом.

Например, для числа 72 ответом будет пара чисел:
72 36
'''

# def delit(x):
#     d = set()

#     for n in range(2, int(x**0.5)+1):
#         if x % n == 0:
#             d.add(n)
#             d.add(x//n)

#     return d 

# n = 0
# for x in range(10**7, 10**7+1000):
#     d = delit(x)
#     interes = [i for i in d if int(i**0.5) == i**0.5]

#     if len(interes) == 3:
#         n += 1
#         print(x, max(interes))

#     if n == 5:
#         break


'''
Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:

    символ «?» означает ровно одну произвольную цифру;
    символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

Например, маске 123*4?5 соответствуют числа 123405 и 12300405.

Пусть M (k) — сумма минимального и максимального натуральных делителей целого числа k, не считая единицы и самого числа. 
Если таких делителей у числа нет, то считаем значение M (k) равным нулю. Напишите программу, которая находит все такие числа k, что:

    k не превосходит 10**8.
    Значение M(k) не равно 0 и делится на 117.
    Десятичная запись числа k удовлетворяет маске 51*2?34

Выведите в первом столбце все найденные значения k в порядке возрастания. Во втором столбце выведите соответствующие им значения M(k).
'''

# from fnmatch import fnmatch

# def delit(x):
#     d = set()

#     for n in range(2, int(x**0.5)+1):
#         if x % n == 0:
#             d.add(n)
#             d.add(x//n)

#     return d 

# for k in range(117, 10**8+1, 117):
#     d = delit(k)

#     if len(d) > 0:
#         m = max(d)+min(d)
#         if m != 0 and m % 117 == 0 and fnmatch(str(k), '51*2?34'):
#             print(k, m)


#     else:
#         m = 0



'''
Назовём маской числа последовательность цифр, в которой также могут встречаться следующие символы:

    символ «?» означает ровно одну произвольную цифру;
    символ «*» означает любую последовательность цифр произвольной длины; в том числе «*» может задавать и пустую последовательность.

Среди натуральных чисел, не превышающих 10**10, найдите все числа, 
соответствующие маске 1*28?64 и делящиеся на 124 и ровно на 5 из всех двузначных чисел, соответствующих маске ?4, без остатка. 
В ответе запишите в первом столбце таблицы все найденные числа в порядке возрастания, 
а во втором столбце — соответствующие им частные от деления на 124.
Количество строк в таблице для ответа избыточно.
'''

# from fnmatch import fnmatch


# for z in range(118328364, 10**10+1, 124):
#     z1 = str(z)

#     div = [i for i in range(10, 100) if fnmatch(str(i), '?4') and z % i == 0]

#     if fnmatch(z1, '1*28?64') and z % 124 == 0 and len(div) == 5:
#         print(z, z / 124)



'''
Напишите программу, которая ищет среди целых чисел, принадлежащих числовому отрезку [800000, 802000], 
числа, у которых не менее двух простых делителей и произведение простых делителей нацело делится на сумму простых делителей. 
Для каждого найденного числа запишите само число и частное от деления произведения его простых делителей на сумму простых делителей.

'''

def delitpr(x):
    d = 1

    for n in range(1, int(x**0.5)+1):
        if x % n == 0:
            d = 0

    return d

for x in range(800000, 802001):
    d = set()
    for n in range(1, int(x**0.5)+1):
        if x % n == 0 and delitpr(n):
            d.add(n)
            d.add(x//n)
    
    proiz = 1
    for i in d:
        proiz *= i

    if len(d) >= 2 and proiz % sum(d) == 0: 
        print(x, proiz // sum(d))
